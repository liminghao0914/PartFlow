digraph G {
	node [fillcolor="1 0.013 1",
		style=filled
	];
	"com.lun.chin.aicamera.CameraActivity.onCreate()"	 [fillcolor="1 1.692 1"];
	"com.lun.chin.aicamera.env.Logger.d()"	 [fillcolor="1 0.019 1"];
	"com.lun.chin.aicamera.CameraActivity.onCreate()" -> "com.lun.chin.aicamera.env.Logger.d()"	 [color="0.26838 1 0.8",
		label=6];
	"com.lun.chin.aicamera.CameraActivity.initialise()"	 [fillcolor="1 1.58 1"];
	"com.lun.chin.aicamera.CameraActivity.onCreate()" -> "com.lun.chin.aicamera.CameraActivity.initialise()"	 [color="0.2403 1 0.8",
		label=110];
	"com.lun.chin.aicamera.CameraActivity$1.onManagerConnected()"	 [fillcolor="1 0.012 1"];
	"com.lun.chin.aicamera.CameraActivity.initialise()" -> "com.lun.chin.aicamera.CameraActivity$1.onManagerConnected()"	 [color="0.0 1 0.8",
		label=1560,
		minlen=1];
	"com.lun.chin.aicamera.CameraActivity.onStart()"	 [fillcolor="1 0.018 1"];
	"com.lun.chin.aicamera.CameraActivity.onResume()"	 [fillcolor="1 0.442 1"];
	"com.lun.chin.aicamera.CameraView.resumeCamera()"	 [fillcolor="1 0.423 1"];
	"com.lun.chin.aicamera.CameraActivity.onResume()" -> "com.lun.chin.aicamera.CameraView.resumeCamera()"	 [color="0.26595 1 0.8",
		label=15];
	"com.lun.chin.aicamera.CameraView.openCamera()"	 [fillcolor="1 0.398 1"];
	"com.lun.chin.aicamera.CameraActivity.onResume()" -> "com.lun.chin.aicamera.CameraView.openCamera()"	 [color="0.26298 1 0.8",
		label=26];
	"com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [fillcolor="1 0.057 1"];
	"com.lun.chin.aicamera.CameraActivity.onResume()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.24354000000000003 1 0.8",
		label=98];
	"com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [fillcolor="1 0.057 1"];
	"com.lun.chin.aicamera.CameraActivity.onResume()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.1728 1 0.8",
		label=360];
	"com.lun.chin.aicamera.CameraView.resumeCamera()" -> "com.lun.chin.aicamera.CameraView.openCamera()"	 [color="0.26703 1 0.8",
		label=11];
	"com.lun.chin.aicamera.CameraView.resumeCamera()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.24759000000000003 1 0.8",
		label=83];
	"com.lun.chin.aicamera.CameraView.resumeCamera()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.17685 1 0.8",
		label=345];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.env.Logger.d()"	 [color="0.17981999999999998 1 0.8",
		label=334];
	"com.lun.chin.aicamera.CameraView.getCameraId()"	 [fillcolor="1 0.018 1"];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.CameraView.getCameraId()"	 [color="0.26676 1 0.8",
		label=12,
		minlen=1];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.25056 1 0.8",
		label=72];
	"com.lun.chin.aicamera.CameraViewBase.chooseLargestSize()"	 [fillcolor="1 0.042 1"];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.CameraViewBase.chooseLargestSize()"	 [color="0.23166 1 0.8",
		label=142];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.17981999999999998 1 0.8",
		label=334];
	"com.lun.chin.aicamera.CameraView.releaseCamera()"	 [fillcolor="1 0.836 1"];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.CameraView.releaseCamera()"	 [color="0.26541000000000003 1 0.8",
		label=17];
	"com.lun.chin.aicamera.CameraActivity.processPreview()"	 [fillcolor="1 2.549 1"];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.CameraActivity.processPreview()"	 [color="0.24570000000000003 1 0.8",
		label=90];
	"com.lun.chin.aicamera.CameraView.getFrontCameraId()"	 [fillcolor="1 0.052 1"];
	"com.lun.chin.aicamera.CameraView.openCamera()" -> "com.lun.chin.aicamera.CameraView.getFrontCameraId()"	 [color="0.26433 1 0.8",
		label=21];
	"com.lun.chin.aicamera.env.Logger.i()"	 [fillcolor="1 0.014 1"];
	"com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()" -> "com.lun.chin.aicamera.env.Logger.i()"	 [color="0.26568 1 0.8",
		label=16,
		minlen=1];
	"com.lun.chin.aicamera.ImageManager.getPreferredImageSize()"	 [fillcolor="1 0.016 1"];
	"com.lun.chin.aicamera.CameraActivity.onCameraStarted()" -> "com.lun.chin.aicamera.ImageManager.getPreferredImageSize()"	 [color="0.25947000000000003 1 0.8",
		label=39,
		minlen=1];
	"com.lun.chin.aicamera.CameraViewBase.onSurfaceTextureAvailable()"	 [fillcolor="1 1.017 1"];
	"com.lun.chin.aicamera.CameraViewBase.onSurfaceTextureAvailable()" -> "com.lun.chin.aicamera.CameraView.openCamera()"	 [color="0.27 1 0.8",
		label=0];
	"com.lun.chin.aicamera.CameraViewBase.onSurfaceTextureAvailable()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.038610000000000005 1 0.8",
		label=857];
	"com.lun.chin.aicamera.CameraViewBase.onSurfaceTextureAvailable()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.003510000000000003 1 0.8",
		label=987];
	"com.lun.chin.aicamera.CameraViewBase.onSurfaceTextureAvailable()" -> "com.lun.chin.aicamera.CameraView.releaseCamera()"	 [color="0.26541000000000003 1 0.8",
		label=17];
	"com.lun.chin.aicamera.CameraView.releaseCamera()" -> "com.lun.chin.aicamera.CameraActivity.processPreview()"	 [color="0.26595 1 0.8",
		label=15];
	"com.lun.chin.aicamera.CameraView$1.run()"	 [fillcolor="1 3.039 1"];
	"com.lun.chin.aicamera.CameraView$1.run()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.25434 1 0.8",
		label=58];
	"com.lun.chin.aicamera.CameraView$1.run()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.22005 1 0.8",
		label=185];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()"	 [fillcolor="1 3.035 1"];
	"com.lun.chin.aicamera.CameraView$1.run()" -> "com.lun.chin.aicamera.CameraViewBase.drawFrame()"	 [color="0.26919000000000004 1 0.8",
		label=3];
	"com.lun.chin.aicamera.CameraView$1.run()" -> "com.lun.chin.aicamera.CameraActivity.processPreview()"	 [color="0.14364000000000002 1 0.8",
		label=468];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()" -> "com.lun.chin.aicamera.env.Logger.d()"	 [color="0.21870000000000003 1 0.8",
		label=190];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.25704 1 0.8",
		label=48];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()" -> "com.lun.chin.aicamera.CameraViewBase.chooseLargestSize()"	 [color="0.24975000000000003 1 0.8",
		label=75];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.22275 1 0.8",
		label=175];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()" -> "com.lun.chin.aicamera.CameraActivity.processPreview()"	 [color="0.14445 1 0.8",
		label=465];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()" -> "com.lun.chin.aicamera.CameraView.getFrontCameraId()"	 [color="0.20439000000000002 1 0.8",
		label=243];
	"com.lun.chin.aicamera.CameraActivity.processPicture()"	 [fillcolor="1 0.011 1"];
	"com.lun.chin.aicamera.CameraViewBase.drawFrame()" -> "com.lun.chin.aicamera.CameraActivity.processPicture()"	 [color="0.22302000000000002 1 0.8",
		label=174,
		minlen=1];
	"com.lun.chin.aicamera.CameraView.onPreviewFrame()"	 [fillcolor="1 0.016 1"];
	"com.lun.chin.aicamera.CameraActivity.processPreview()" -> "com.lun.chin.aicamera.CameraView.onPreviewFrame()"	 [color="0.20304000000000003 1 0.8",
		label=248,
		minlen=1];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()"	 [fillcolor="1 0.533 1"];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()" -> "com.lun.chin.aicamera.CameraView.openCamera()"	 [color="0.26946000000000003 1 0.8",
		label=2];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.1701 1 0.8",
		label=370];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.13581000000000001 1 0.8",
		label=497];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()" -> "com.lun.chin.aicamera.CameraView.releaseCamera()"	 [color="0.24921000000000001 1 0.8",
		label=77];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()" -> "com.lun.chin.aicamera.CameraActivity.processPreview()"	 [color="0.24516000000000002 1 0.8",
		label=92];
	"com.lun.chin.aicamera.CameraView.switchCamera()"	 [fillcolor="1 0.523 1"];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()" -> "com.lun.chin.aicamera.CameraView.switchCamera()"	 [color="0.26946000000000003 1 0.8",
		label=2];
	"com.lun.chin.aicamera.CameraView.takePicture()"	 [fillcolor="1 0.344 1"];
	"com.lun.chin.aicamera.CameraActivity$CameraButtonsListener.onClick()" -> "com.lun.chin.aicamera.CameraView.takePicture()"	 [color="0.25353000000000003 1 0.8",
		label=61,
		minlen=1];
	"com.lun.chin.aicamera.CameraView.switchCamera()" -> "com.lun.chin.aicamera.CameraViewBase.chooseOptimalSize()"	 [color="0.17064000000000001 1 0.8",
		label=368];
	"com.lun.chin.aicamera.CameraView.switchCamera()" -> "com.lun.chin.aicamera.CameraViewBase.chooseLargestSize()"	 [color="0.16335 1 0.8",
		label=395];
	"com.lun.chin.aicamera.CameraView.switchCamera()" -> "com.lun.chin.aicamera.CameraActivity.onCameraStarted()"	 [color="0.13635 1 0.8",
		label=495];
	"com.lun.chin.aicamera.CameraView.switchCamera()" -> "com.lun.chin.aicamera.CameraView.releaseCamera()"	 [color="0.24975000000000003 1 0.8",
		label=75];
	"com.lun.chin.aicamera.CameraView.switchCamera()" -> "com.lun.chin.aicamera.CameraActivity.processPreview()"	 [color="0.24570000000000003 1 0.8",
		label=90];
	"com.lun.chin.aicamera.CameraView.switchCamera()" -> "com.lun.chin.aicamera.CameraView.getFrontCameraId()"	 [color="0.26433 1 0.8",
		label=21];
}
